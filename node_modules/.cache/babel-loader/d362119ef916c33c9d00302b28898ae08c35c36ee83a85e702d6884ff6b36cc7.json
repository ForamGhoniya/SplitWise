{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE\\\\Desktop\\\\workspace\\\\splitwise\\\\src\\\\feature\\\\homepage\\\\components\\\\groupExpense.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// const GroupForm = ({ onSave }) => {\n//     const [groupName, setGroupName] = useState(\"\");\n//     const [paidByName, setPaidByName] = useState(\"\");\n//     const [amount, setAmount] = useState(\"\");\n//     const [members, setMembers] = useState([]);\n\n//     const handleAddMember = () => {\n//         setMembers([...members, { name: \"\", amount: 0 }]);\n//     };\n\n//     const handleMemberChange = (index, field, value) => {\n//         const updatedMembers = [...members];\n//         updatedMembers[index][field] = value;\n//         setMembers(updatedMembers);\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         const groupData = {\n//             groupName,\n//             paidByName,\n//             amount,\n//             members,\n//         };\n\n//         onSave(groupData);\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <label>\n//                 Group Name:\n//                 <input\n//                     type=\"text\"\n//                     value={groupName}\n//                     onChange={(event) => setGroupName(event.target.value)}\n//                 />\n//             </label>\n\n//             <label>\n//                 Paid By:\n//                 <input\n//                     type=\"text\"\n//                     value={paidByName}\n//                     onChange={(event) => setPaidByName(event.target.value)}\n//                 />\n//             </label>\n\n//             <label>\n//                 Total Pay Amount:\n//                 <input\n//                     type=\"number\"\n//                     value={amount}\n//                     onChange={(event) => setAmount(event.target.value)}\n//                 />\n//             </label>\n\n//             <h3>Members:</h3>\n//             {members.map((member, index) => (\n//                 <div key={index}>\n//                     <label>\n//                         Name:\n//                         <input\n//                             type=\"text\"\n//                             value={member.name}\n//                             onChange={(event) =>\n//                                 handleMemberChange(\n//                                     index,\n//                                     \"name\",\n//                                     event.target.value\n//                                 )\n//                             }\n//                         />\n//                     </label>\n\n//                     <label>\n//                         Splitable Amount:\n//                         <input\n//                             type=\"number\"\n//                             value={member.amount}\n//                             onChange={(event) =>\n//                                 handleMemberChange(\n//                                     index,\n//                                     \"amount\",\n//                                     event.target.value\n//                                 )\n//                             }\n//                         />\n//                     </label>\n//                 </div>\n//             ))}\n//             <button\n//                 type=\"button\"\n//                 onClick={handleAddMember}\n//             >\n//                 Add Member\n//             </button>\n\n//             <button type=\"submit\">Save Group</button>\n//         </form>\n//     );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupList = _ref => {\n  let {\n    groups,\n    onGroupSelect\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: groups.map((group, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      onClick: () => onGroupSelect(group),\n      children: group.groupName\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_c = GroupList;\nconst GroupDetails = _ref2 => {\n  let {\n    group\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: group.groupName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Paid By: \", group.paidByName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Pay Amount: \", group.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Members:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: group.members.map((member, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name: \", member.name, \", Splitable Amount: \", member.amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n};\n_c2 = GroupDetails;\nconst TripBuddyGroup = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  useEffect(() => {\n    const savedGroups = loadFromLocalStorage();\n    if (savedGroups) {\n      setGroups(savedGroups);\n    }\n  }, []);\n  const handleSaveGroup = groupData => {\n    const updatedGroups = [...groups, groupData];\n    setGroups(updatedGroups);\n    saveToLocalStorage(updatedGroups);\n  };\n  const saveToLocalStorage = data => {\n    localStorage.setItem(\"groups\", JSON.stringify(data));\n  };\n  const loadFromLocalStorage = () => {\n    const data = localStorage.getItem(\"groups\");\n    return data ? JSON.parse(data) : null;\n  };\n  const handleGroupSelect = group => {\n    setSelectedGroup(group);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GroupForm, {\n      onSave: handleSaveGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GroupList, {\n      groups: groups,\n      onGroupSelect: handleGroupSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), selectedGroup && /*#__PURE__*/_jsxDEV(GroupDetails, {\n      group: selectedGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n_s(TripBuddyGroup, \"Gf0AHXXohHblC168ptQFfAtVQJc=\");\n_c3 = TripBuddyGroup;\nexport default TripBuddyGroup;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GroupList\");\n$RefreshReg$(_c2, \"GroupDetails\");\n$RefreshReg$(_c3, \"TripBuddyGroup\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GroupList","_ref","groups","onGroupSelect","children","map","group","index","onClick","groupName","fileName","_jsxFileName","lineNumber","columnNumber","_c","GroupDetails","_ref2","paidByName","amount","members","member","name","_c2","TripBuddyGroup","_s","setGroups","selectedGroup","setSelectedGroup","savedGroups","loadFromLocalStorage","handleSaveGroup","groupData","updatedGroups","saveToLocalStorage","data","localStorage","setItem","JSON","stringify","getItem","parse","handleGroupSelect","GroupForm","onSave","_c3","$RefreshReg$"],"sources":["C:/Users/CREATIVE/Desktop/workspace/splitwise/src/feature/homepage/components/groupExpense.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// const GroupForm = ({ onSave }) => {\r\n//     const [groupName, setGroupName] = useState(\"\");\r\n//     const [paidByName, setPaidByName] = useState(\"\");\r\n//     const [amount, setAmount] = useState(\"\");\r\n//     const [members, setMembers] = useState([]);\r\n\r\n//     const handleAddMember = () => {\r\n//         setMembers([...members, { name: \"\", amount: 0 }]);\r\n//     };\r\n\r\n//     const handleMemberChange = (index, field, value) => {\r\n//         const updatedMembers = [...members];\r\n//         updatedMembers[index][field] = value;\r\n//         setMembers(updatedMembers);\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         const groupData = {\r\n//             groupName,\r\n//             paidByName,\r\n//             amount,\r\n//             members,\r\n//         };\r\n\r\n//         onSave(groupData);\r\n//     };\r\n\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             <label>\r\n//                 Group Name:\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={groupName}\r\n//                     onChange={(event) => setGroupName(event.target.value)}\r\n//                 />\r\n//             </label>\r\n\r\n//             <label>\r\n//                 Paid By:\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={paidByName}\r\n//                     onChange={(event) => setPaidByName(event.target.value)}\r\n//                 />\r\n//             </label>\r\n\r\n//             <label>\r\n//                 Total Pay Amount:\r\n//                 <input\r\n//                     type=\"number\"\r\n//                     value={amount}\r\n//                     onChange={(event) => setAmount(event.target.value)}\r\n//                 />\r\n//             </label>\r\n\r\n//             <h3>Members:</h3>\r\n//             {members.map((member, index) => (\r\n//                 <div key={index}>\r\n//                     <label>\r\n//                         Name:\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             value={member.name}\r\n//                             onChange={(event) =>\r\n//                                 handleMemberChange(\r\n//                                     index,\r\n//                                     \"name\",\r\n//                                     event.target.value\r\n//                                 )\r\n//                             }\r\n//                         />\r\n//                     </label>\r\n\r\n//                     <label>\r\n//                         Splitable Amount:\r\n//                         <input\r\n//                             type=\"number\"\r\n//                             value={member.amount}\r\n//                             onChange={(event) =>\r\n//                                 handleMemberChange(\r\n//                                     index,\r\n//                                     \"amount\",\r\n//                                     event.target.value\r\n//                                 )\r\n//                             }\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//             ))}\r\n//             <button\r\n//                 type=\"button\"\r\n//                 onClick={handleAddMember}\r\n//             >\r\n//                 Add Member\r\n//             </button>\r\n\r\n//             <button type=\"submit\">Save Group</button>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\nconst GroupList = ({ groups, onGroupSelect }) => {\r\n    return (\r\n        <ul>\r\n            {groups.map((group, index) => (\r\n                <li\r\n                    key={index}\r\n                    onClick={() => onGroupSelect(group)}\r\n                >\r\n                    {group.groupName}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nconst GroupDetails = ({ group }) => {\r\n    return (\r\n        <div>\r\n            <h2>{group.groupName}</h2>\r\n            <p>Paid By: {group.paidByName}</p>\r\n            <p>Total Pay Amount: {group.amount}</p>\r\n            <h3>Members:</h3>\r\n            <ul>\r\n                {group.members.map((member, index) => (\r\n                    <li key={index}>\r\n                        Name: {member.name}, Splitable Amount: {member.amount}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TripBuddyGroup = () => {\r\n    const [groups, setGroups] = useState([]);\r\n    const [selectedGroup, setSelectedGroup] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const savedGroups = loadFromLocalStorage();\r\n        if (savedGroups) {\r\n            setGroups(savedGroups);\r\n        }\r\n    }, []);\r\n\r\n    const handleSaveGroup = (groupData) => {\r\n        const updatedGroups = [...groups, groupData];\r\n        setGroups(updatedGroups);\r\n        saveToLocalStorage(updatedGroups);\r\n    };\r\n\r\n    const saveToLocalStorage = (data) => {\r\n        localStorage.setItem(\"groups\", JSON.stringify(data));\r\n    };\r\n\r\n    const loadFromLocalStorage = () => {\r\n        const data = localStorage.getItem(\"groups\");\r\n        return data ? JSON.parse(data) : null;\r\n    };\r\n\r\n    const handleGroupSelect = (group) => {\r\n        setSelectedGroup(group);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <GroupForm onSave={handleSaveGroup} />\r\n            <GroupList\r\n                groups={groups}\r\n                onGroupSelect={handleGroupSelect}\r\n            />\r\n            {selectedGroup && <GroupDetails group={selectedGroup} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TripBuddyGroup;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}