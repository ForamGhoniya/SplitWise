{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// const GroupForm = ({ onSave }) => {\n//     const [groupName, setGroupName] = useState(\"\");\n//     const [paidByName, setPaidByName] = useState(\"\");\n//     const [amount, setAmount] = useState(\"\");\n//     const [members, setMembers] = useState([]);\n\n//     const handleAddMember = () => {\n//         setMembers([...members, { name: \"\", amount: 0 }]);\n//     };\n\n//     const handleMemberChange = (index, field, value) => {\n//         const updatedMembers = [...members];\n//         updatedMembers[index][field] = value;\n//         setMembers(updatedMembers);\n//     };\n\n//     const handleSubmit = (event) => {\n//         event.preventDefault();\n\n//         const groupData = {\n//             groupName,\n//             paidByName,\n//             amount,\n//             members,\n//         };\n\n//         onSave(groupData);\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit}>\n//             <label>\n//                 Group Name:\n//                 <input\n//                     type=\"text\"\n//                     value={groupName}\n//                     onChange={(event) => setGroupName(event.target.value)}\n//                 />\n//             </label>\n\n//             <label>\n//                 Paid By:\n//                 <input\n//                     type=\"text\"\n//                     value={paidByName}\n//                     onChange={(event) => setPaidByName(event.target.value)}\n//                 />\n//             </label>\n\n//             <label>\n//                 Total Pay Amount:\n//                 <input\n//                     type=\"number\"\n//                     value={amount}\n//                     onChange={(event) => setAmount(event.target.value)}\n//                 />\n//             </label>\n\n//             <h3>Members:</h3>\n//             {members.map((member, index) => (\n//                 <div key={index}>\n//                     <label>\n//                         Name:\n//                         <input\n//                             type=\"text\"\n//                             value={member.name}\n//                             onChange={(event) =>\n//                                 handleMemberChange(\n//                                     index,\n//                                     \"name\",\n//                                     event.target.value\n//                                 )\n//                             }\n//                         />\n//                     </label>\n\n//                     <label>\n//                         Splitable Amount:\n//                         <input\n//                             type=\"number\"\n//                             value={member.amount}\n//                             onChange={(event) =>\n//                                 handleMemberChange(\n//                                     index,\n//                                     \"amount\",\n//                                     event.target.value\n//                                 )\n//                             }\n//                         />\n//                     </label>\n//                 </div>\n//             ))}\n//             <button\n//                 type=\"button\"\n//                 onClick={handleAddMember}\n//             >\n//                 Add Member\n//             </button>\n\n//             <button type=\"submit\">Save Group</button>\n//         </form>\n//     );\n// };\n\n// const GroupList = ({ groups, onGroupSelect }) => {\n//     return (\n//         <ul>\n//             {groups.map((group, index) => (\n//                 <li\n//                     key={index}\n//                     onClick={() => onGroupSelect(group)}\n//                 >\n//                     {group.groupName}\n//                 </li>\n//             ))}\n//         </ul>\n//     );\n// };\n\n// const GroupDetails = ({ group }) => {\n//     return (\n//         <div>\n//             <h2>{group.groupName}</h2>\n//             <p>Paid By: {group.paidByName}</p>\n//             <p>Total Pay Amount: {group.amount}</p>\n//             <h3>Members:</h3>\n//             <ul>\n//                 {group.members.map((member, index) => (\n//                     <li key={index}>\n//                         Name: {member.name}, Splitable Amount: {member.amount}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\nconst TripBuddyGroup = () => {\n  _s();\n  const [groups, setGroups] = useState([]);\n  // const [selectedGroup, setSelectedGroup] = useState(null);\n\n  useEffect(() => {\n    const savedGroups = loadFromLocalStorage();\n    if (savedGroups) {\n      setGroups(savedGroups);\n    }\n  }, []);\n  const handleSaveGroup = groupData => {\n    const updatedGroups = [...groups, groupData];\n    setGroups(updatedGroups);\n    saveToLocalStorage(updatedGroups);\n  };\n  const saveToLocalStorage = data => {\n    localStorage.setItem(\"groups\", JSON.stringify(data));\n  };\n  const loadFromLocalStorage = () => {\n    const data = localStorage.getItem(\"groups\");\n    return data ? JSON.parse(data) : null;\n  };\n\n  // const handleGroupSelect = (group) => {\n  //     setSelectedGroup(group);\n  // };\n\n  // return (\n  //     <div>\n  //         <GroupForm onSave={handleSaveGroup} />\n  //         <GroupList\n  //             groups={groups}\n  //             onGroupSelect={handleGroupSelect}\n  //         />\n  //         {/* {selectedGroup && <GroupDetails group={selectedGroup} />} */}\n  //     </div>\n  // );\n};\n_s(TripBuddyGroup, \"UbUkkKKaTwVY7PWotTfxor2xXvY=\");\n_c = TripBuddyGroup;\nexport default TripBuddyGroup;\nvar _c;\n$RefreshReg$(_c, \"TripBuddyGroup\");","map":{"version":3,"names":["React","useState","useEffect","TripBuddyGroup","_s","groups","setGroups","savedGroups","loadFromLocalStorage","handleSaveGroup","groupData","updatedGroups","saveToLocalStorage","data","localStorage","setItem","JSON","stringify","getItem","parse","_c","$RefreshReg$"],"sources":["C:/Users/CREATIVE/Desktop/workspace/splitwise/src/feature/homepage/components/groupExpense.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// const GroupForm = ({ onSave }) => {\r\n//     const [groupName, setGroupName] = useState(\"\");\r\n//     const [paidByName, setPaidByName] = useState(\"\");\r\n//     const [amount, setAmount] = useState(\"\");\r\n//     const [members, setMembers] = useState([]);\r\n\r\n//     const handleAddMember = () => {\r\n//         setMembers([...members, { name: \"\", amount: 0 }]);\r\n//     };\r\n\r\n//     const handleMemberChange = (index, field, value) => {\r\n//         const updatedMembers = [...members];\r\n//         updatedMembers[index][field] = value;\r\n//         setMembers(updatedMembers);\r\n//     };\r\n\r\n//     const handleSubmit = (event) => {\r\n//         event.preventDefault();\r\n\r\n//         const groupData = {\r\n//             groupName,\r\n//             paidByName,\r\n//             amount,\r\n//             members,\r\n//         };\r\n\r\n//         onSave(groupData);\r\n//     };\r\n\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n//             <label>\r\n//                 Group Name:\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={groupName}\r\n//                     onChange={(event) => setGroupName(event.target.value)}\r\n//                 />\r\n//             </label>\r\n\r\n//             <label>\r\n//                 Paid By:\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={paidByName}\r\n//                     onChange={(event) => setPaidByName(event.target.value)}\r\n//                 />\r\n//             </label>\r\n\r\n//             <label>\r\n//                 Total Pay Amount:\r\n//                 <input\r\n//                     type=\"number\"\r\n//                     value={amount}\r\n//                     onChange={(event) => setAmount(event.target.value)}\r\n//                 />\r\n//             </label>\r\n\r\n//             <h3>Members:</h3>\r\n//             {members.map((member, index) => (\r\n//                 <div key={index}>\r\n//                     <label>\r\n//                         Name:\r\n//                         <input\r\n//                             type=\"text\"\r\n//                             value={member.name}\r\n//                             onChange={(event) =>\r\n//                                 handleMemberChange(\r\n//                                     index,\r\n//                                     \"name\",\r\n//                                     event.target.value\r\n//                                 )\r\n//                             }\r\n//                         />\r\n//                     </label>\r\n\r\n//                     <label>\r\n//                         Splitable Amount:\r\n//                         <input\r\n//                             type=\"number\"\r\n//                             value={member.amount}\r\n//                             onChange={(event) =>\r\n//                                 handleMemberChange(\r\n//                                     index,\r\n//                                     \"amount\",\r\n//                                     event.target.value\r\n//                                 )\r\n//                             }\r\n//                         />\r\n//                     </label>\r\n//                 </div>\r\n//             ))}\r\n//             <button\r\n//                 type=\"button\"\r\n//                 onClick={handleAddMember}\r\n//             >\r\n//                 Add Member\r\n//             </button>\r\n\r\n//             <button type=\"submit\">Save Group</button>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// const GroupList = ({ groups, onGroupSelect }) => {\r\n//     return (\r\n//         <ul>\r\n//             {groups.map((group, index) => (\r\n//                 <li\r\n//                     key={index}\r\n//                     onClick={() => onGroupSelect(group)}\r\n//                 >\r\n//                     {group.groupName}\r\n//                 </li>\r\n//             ))}\r\n//         </ul>\r\n//     );\r\n// };\r\n\r\n// const GroupDetails = ({ group }) => {\r\n//     return (\r\n//         <div>\r\n//             <h2>{group.groupName}</h2>\r\n//             <p>Paid By: {group.paidByName}</p>\r\n//             <p>Total Pay Amount: {group.amount}</p>\r\n//             <h3>Members:</h3>\r\n//             <ul>\r\n//                 {group.members.map((member, index) => (\r\n//                     <li key={index}>\r\n//                         Name: {member.name}, Splitable Amount: {member.amount}\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\nconst TripBuddyGroup = () => {\r\n    const [groups, setGroups] = useState([]);\r\n    // const [selectedGroup, setSelectedGroup] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const savedGroups = loadFromLocalStorage();\r\n        if (savedGroups) {\r\n            setGroups(savedGroups);\r\n        }\r\n    }, []);\r\n\r\n    const handleSaveGroup = (groupData) => {\r\n        const updatedGroups = [...groups, groupData];\r\n        setGroups(updatedGroups);\r\n        saveToLocalStorage(updatedGroups);\r\n    };\r\n\r\n    const saveToLocalStorage = (data) => {\r\n        localStorage.setItem(\"groups\", JSON.stringify(data));\r\n    };\r\n\r\n    const loadFromLocalStorage = () => {\r\n        const data = localStorage.getItem(\"groups\");\r\n        return data ? JSON.parse(data) : null;\r\n    };\r\n\r\n    // const handleGroupSelect = (group) => {\r\n    //     setSelectedGroup(group);\r\n    // };\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <GroupForm onSave={handleSaveGroup} />\r\n    //         <GroupList\r\n    //             groups={groups}\r\n    //             onGroupSelect={handleGroupSelect}\r\n    //         />\r\n    //         {/* {selectedGroup && <GroupDetails group={selectedGroup} />} */}\r\n    //     </div>\r\n    // );\r\n};\r\n\r\nexport default TripBuddyGroup;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElcAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC;;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMK,WAAW,GAAGC,oBAAoB,CAAC,CAAC;IAC1C,IAAID,WAAW,EAAE;MACbD,SAAS,CAACC,WAAW,CAAC;IAC1B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAIC,SAAS,IAAK;IACnC,MAAMC,aAAa,GAAG,CAAC,GAAGN,MAAM,EAAEK,SAAS,CAAC;IAC5CJ,SAAS,CAACK,aAAa,CAAC;IACxBC,kBAAkB,CAACD,aAAa,CAAC;EACrC,CAAC;EAED,MAAMC,kBAAkB,GAAIC,IAAI,IAAK;IACjCC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EACxD,CAAC;EAED,MAAML,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMK,IAAI,GAAGC,YAAY,CAACI,OAAO,CAAC,QAAQ,CAAC;IAC3C,OAAOL,IAAI,GAAGG,IAAI,CAACG,KAAK,CAACN,IAAI,CAAC,GAAG,IAAI;EACzC,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AAACT,EAAA,CAxCID,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}