{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE\\\\Desktop\\\\workspace\\\\splitwise\\\\src\\\\feature\\\\homepage\\\\components\\\\amount.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseTracker = () => {\n  _s();\n  const [groupMembers, setGroupMembers] = useState([]);\n  const [expenses, setExpenses] = useState({});\n  const [newMember, setNewMember] = useState(\"\");\n  const [selectedMember, setSelectedMember] = useState(\"\");\n  const [expenseAmount, setExpenseAmount] = useState(0);\n  useEffect(() => {\n    const storedGroupMembers = localStorage.getItem(\"groupMembers\");\n    const storedExpenses = localStorage.getItem(\"expenses\");\n    if (storedGroupMembers) {\n      setGroupMembers(JSON.parse(storedGroupMembers));\n    }\n    if (storedExpenses) {\n      setExpenses(JSON.parse(storedExpenses));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"groupMembers\", JSON.stringify(groupMembers));\n  }, [groupMembers]);\n  useEffect(() => {\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  }, [expenses]);\n  const addGroupMember = () => {\n    if (groupMembers.length >= 5) {\n      alert(\"Maximum group size reached.\");\n      return;\n    }\n    if (groupMembers.includes(newMember)) {\n      alert(\"Member already exists in the group.\");\n      return;\n    }\n    setGroupMembers([...groupMembers, newMember]);\n    setExpenses({\n      ...expenses,\n      [newMember]: 0\n    });\n    setNewMember(\"\");\n  };\n  const removeGroupMember = member => {\n    const updatedMembers = groupMembers.filter(m => m !== member);\n    const updatedExpenses = {\n      ...expenses\n    };\n    delete updatedExpenses[member];\n    setGroupMembers(updatedMembers);\n    setExpenses(updatedExpenses);\n  };\n  const addExpense = (member, amount) => {\n    setExpenses({\n      ...expenses,\n      [member]: expenses[member] + amount\n    });\n  };\n  const splitExpenses = () => {\n    const totalMembers = groupMembers.length;\n    const totalExpenses = Object.values(expenses).reduce((acc, cur) => acc + cur, 0);\n    const splitAmount = totalExpenses / totalMembers;\n    const updatedExpenses = {};\n    groupMembers.forEach(member => {\n      updatedExpenses[member] = splitAmount;\n    });\n    setExpenses(updatedExpenses);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Group Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newMember,\n        onChange: e => setNewMember(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addGroupMember,\n        children: \"Add Member\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Group Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groupMembers.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [member, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeGroupMember(member),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, member, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedMember,\n        onChange: e => setSelectedMember(e.target.value),\n        children: groupMembers.map(member => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: member,\n          children: member\n        }, member, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: expenseAmount,\n        onChange: e => setExpenseAmount(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addExpense(selectedMember, expenseAmount),\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Expenses and Splits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), Object.entries(expenses).map(_ref => {\n        let [member, amount] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [member, \": \", amount]\n        }, member, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: splitExpenses,\n        children: \"Split Equally\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseTracker, \"MtBr3X3rz9z4HZHDGbPMjU01jiQ=\");\n_c = ExpenseTracker;\nexport default ExpenseTracker;\nvar _c;\n$RefreshReg$(_c, \"ExpenseTracker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ExpenseTracker","_s","groupMembers","setGroupMembers","expenses","setExpenses","newMember","setNewMember","selectedMember","setSelectedMember","expenseAmount","setExpenseAmount","storedGroupMembers","localStorage","getItem","storedExpenses","JSON","parse","setItem","stringify","addGroupMember","length","alert","includes","removeGroupMember","member","updatedMembers","filter","m","updatedExpenses","addExpense","amount","splitExpenses","totalMembers","totalExpenses","Object","values","reduce","acc","cur","splitAmount","forEach","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","map","Number","entries","_ref","_c","$RefreshReg$"],"sources":["C:/Users/CREATIVE/Desktop/workspace/splitwise/src/feature/homepage/components/amount.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ExpenseTracker = () => {\r\n    const [groupMembers, setGroupMembers] = useState([]);\r\n    const [expenses, setExpenses] = useState({});\r\n    const [newMember, setNewMember] = useState(\"\");\r\n    const [selectedMember, setSelectedMember] = useState(\"\");\r\n    const [expenseAmount, setExpenseAmount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const storedGroupMembers = localStorage.getItem(\"groupMembers\");\r\n        const storedExpenses = localStorage.getItem(\"expenses\");\r\n\r\n        if (storedGroupMembers) {\r\n            setGroupMembers(JSON.parse(storedGroupMembers));\r\n        }\r\n\r\n        if (storedExpenses) {\r\n            setExpenses(JSON.parse(storedExpenses));\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"groupMembers\", JSON.stringify(groupMembers));\r\n    }, [groupMembers]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"expenses\", JSON.stringify(expenses));\r\n    }, [expenses]);\r\n\r\n    const addGroupMember = () => {\r\n        if (groupMembers.length >= 5) {\r\n            alert(\"Maximum group size reached.\");\r\n            return;\r\n        }\r\n\r\n        if (groupMembers.includes(newMember)) {\r\n            alert(\"Member already exists in the group.\");\r\n            return;\r\n        }\r\n\r\n        setGroupMembers([...groupMembers, newMember]);\r\n        setExpenses({ ...expenses, [newMember]: 0 });\r\n        setNewMember(\"\");\r\n    };\r\n\r\n    const removeGroupMember = (member) => {\r\n        const updatedMembers = groupMembers.filter((m) => m !== member);\r\n        const updatedExpenses = { ...expenses };\r\n        delete updatedExpenses[member];\r\n\r\n        setGroupMembers(updatedMembers);\r\n        setExpenses(updatedExpenses);\r\n    };\r\n\r\n    const addExpense = (member, amount) => {\r\n        setExpenses({ ...expenses, [member]: expenses[member] + amount });\r\n    };\r\n\r\n    const splitExpenses = () => {\r\n        const totalMembers = groupMembers.length;\r\n        const totalExpenses = Object.values(expenses).reduce(\r\n            (acc, cur) => acc + cur,\r\n            0\r\n        );\r\n        const splitAmount = totalExpenses / totalMembers;\r\n\r\n        const updatedExpenses = {};\r\n        groupMembers.forEach((member) => {\r\n            updatedExpenses[member] = splitAmount;\r\n        });\r\n\r\n        setExpenses(updatedExpenses);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Expense Tracker</h2>\r\n\r\n            <div>\r\n                <h3>Add Group Members</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    value={newMember}\r\n                    onChange={(e) => setNewMember(e.target.value)}\r\n                />\r\n                <button onClick={addGroupMember}>Add Member</button>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Group Members</h3>\r\n                <ul>\r\n                    {groupMembers.map((member) => (\r\n                        <li key={member}>\r\n                            {member}\r\n                            <button onClick={() => removeGroupMember(member)}>\r\n                                Remove\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Add Expense</h3>\r\n                <select\r\n                    value={selectedMember}\r\n                    onChange={(e) => setSelectedMember(e.target.value)}\r\n                >\r\n                    {groupMembers.map((member) => (\r\n                        <option\r\n                            key={member}\r\n                            value={member}\r\n                        >\r\n                            {member}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <input\r\n                    type=\"number\"\r\n                    value={expenseAmount}\r\n                    onChange={(e) => setExpenseAmount(Number(e.target.value))}\r\n                />\r\n                <button\r\n                    onClick={() => addExpense(selectedMember, expenseAmount)}\r\n                >\r\n                    Add Expense\r\n                </button>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>Expenses and Splits</h3>\r\n                {Object.entries(expenses).map(([member, amount]) => (\r\n                    <p key={member}>\r\n                        {member}: {amount}\r\n                    </p>\r\n                ))}\r\n                <button onClick={splitExpenses}>Split Equally</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseTracker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}