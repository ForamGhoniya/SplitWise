{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE\\\\Desktop\\\\workspace\\\\splitwise\\\\src\\\\feature\\\\homepage\\\\components\\\\amount.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupExpenseTracker = () => {\n  _s();\n  const [groupMembers, setGroupMembers] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [newExpenseDescription, setNewExpenseDescription] = useState('');\n  const [newExpenseAmount, setNewExpenseAmount] = useState(0);\n  const [paidBy, setPaidBy] = useState('');\n\n  // Load group members and expenses from local storage on component mount\n  useEffect(() => {\n    const storedGroupMembers = localStorage.getItem('groupMembers');\n    const storedExpenses = localStorage.getItem('expenses');\n    if (storedGroupMembers) {\n      setGroupMembers(JSON.parse(storedGroupMembers));\n    }\n    if (storedExpenses) {\n      setExpenses(JSON.parse(storedExpenses));\n    }\n  }, []);\n\n  // Update local storage whenever group members or expenses change\n  useEffect(() => {\n    localStorage.setItem('groupMembers', JSON.stringify(groupMembers));\n  }, [groupMembers]);\n  useEffect(() => {\n    localStorage.setItem('expenses', JSON.stringify(expenses));\n  }, [expenses]);\n\n  // Add a new group member\n  const addGroupMember = () => {\n    // Generate a unique ID for the member (using a simple timestamp in this example)\n    const memberId = new Date().getTime();\n    const newMember = {\n      id: memberId,\n      name: `Member ${memberId}`\n    };\n    setGroupMembers([...groupMembers, newMember]);\n  };\n\n  // Remove a group member\n  const removeGroupMember = memberId => {\n    const updatedMembers = groupMembers.filter(member => member.id !== memberId);\n    setGroupMembers(updatedMembers);\n  };\n\n  // Add a new expense\n  const addExpense = () => {\n    const newExpense = {\n      description: newExpenseDescription,\n      amount: newExpenseAmount,\n      paidBy\n    };\n    setExpenses([...expenses, newExpense]);\n\n    // Reset input fields\n    setNewExpenseDescription('');\n    setNewExpenseAmount(0);\n    setPaidBy('');\n  };\n\n  // Split the expenses among group members\n  const splitExpenses = () => {\n    // Calculate the amount each member owes\n    const totalExpense = expenses.reduce((sum, expense) => sum + expense.amount, 0);\n    const individualExpense = totalExpense / groupMembers.length;\n\n    // Update each member's balance\n    const updatedMembers = groupMembers.map(member => {\n      const expensesPaid = expenses.filter(expense => expense.paidBy === member.id);\n      const totalPaid = expensesPaid.reduce((sum, expense) => sum + expense.amount, 0);\n      const balance = totalPaid - individualExpense;\n      return {\n        ...member,\n        balance\n      };\n    });\n    setGroupMembers(updatedMembers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Group Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groupMembers.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [member.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeGroupMember(member.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, member.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addGroupMember,\n      children: \"Add Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: expenses.map((expense, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Description: \", expense.description, \", Amount: \", expense.amount, \", Paid by: \", expense.paidBy]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newExpenseDescription,\n        onChange: e => setNewExpenseDescription(e.target.value),\n        placeholder: \"Expense Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newExpenseAmount,\n        onChange: e => setNewExpenseAmount(Number(e.target.value)),\n        placeholder: \"Expense Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: paidBy,\n        onChange: e => setPaidBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), groupMembers.map(member => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: member.id,\n          children: member.name\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addExpense,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: splitExpenses,\n      children: \"Split Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupExpenseTracker, \"QLMo3YIEartuCQp0QQmslzXSAAo=\");\n_c = GroupExpenseTracker;\nexport default GroupExpenseTracker;\nvar _c;\n$RefreshReg$(_c, \"GroupExpenseTracker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GroupExpenseTracker","_s","groupMembers","setGroupMembers","expenses","setExpenses","newExpenseDescription","setNewExpenseDescription","newExpenseAmount","setNewExpenseAmount","paidBy","setPaidBy","storedGroupMembers","localStorage","getItem","storedExpenses","JSON","parse","setItem","stringify","addGroupMember","memberId","Date","getTime","newMember","id","name","removeGroupMember","updatedMembers","filter","member","addExpense","newExpense","description","amount","splitExpenses","totalExpense","reduce","sum","expense","individualExpense","length","map","expensesPaid","totalPaid","balance","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","type","value","onChange","e","target","placeholder","Number","_c","$RefreshReg$"],"sources":["C:/Users/CREATIVE/Desktop/workspace/splitwise/src/feature/homepage/components/amount.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst GroupExpenseTracker = () => {\r\n  const [groupMembers, setGroupMembers] = useState([]);\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [newExpenseDescription, setNewExpenseDescription] = useState('');\r\n  const [newExpenseAmount, setNewExpenseAmount] = useState(0);\r\n  const [paidBy, setPaidBy] = useState('');\r\n\r\n  // Load group members and expenses from local storage on component mount\r\n  useEffect(() => {\r\n    const storedGroupMembers = localStorage.getItem('groupMembers');\r\n    const storedExpenses = localStorage.getItem('expenses');\r\n\r\n    if (storedGroupMembers) {\r\n      setGroupMembers(JSON.parse(storedGroupMembers));\r\n    }\r\n\r\n    if (storedExpenses) {\r\n      setExpenses(JSON.parse(storedExpenses));\r\n    }\r\n  }, []);\r\n\r\n  // Update local storage whenever group members or expenses change\r\n  useEffect(() => {\r\n    localStorage.setItem('groupMembers', JSON.stringify(groupMembers));\r\n  }, [groupMembers]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('expenses', JSON.stringify(expenses));\r\n  }, [expenses]);\r\n\r\n  // Add a new group member\r\n  const addGroupMember = () => {\r\n    // Generate a unique ID for the member (using a simple timestamp in this example)\r\n    const memberId = new Date().getTime();\r\n    const newMember = {\r\n      id: memberId,\r\n      name: `Member ${memberId}`\r\n    };\r\n\r\n    setGroupMembers([...groupMembers, newMember]);\r\n  };\r\n\r\n  // Remove a group member\r\n  const removeGroupMember = (memberId) => {\r\n    const updatedMembers = groupMembers.filter(member => member.id !== memberId);\r\n    setGroupMembers(updatedMembers);\r\n  };\r\n\r\n  // Add a new expense\r\n  const addExpense = () => {\r\n    const newExpense = {\r\n      description: newExpenseDescription,\r\n      amount: newExpenseAmount,\r\n      paidBy\r\n    };\r\n\r\n    setExpenses([...expenses, newExpense]);\r\n\r\n    // Reset input fields\r\n    setNewExpenseDescription('');\r\n    setNewExpenseAmount(0);\r\n    setPaidBy('');\r\n  };\r\n\r\n  // Split the expenses among group members\r\n  const splitExpenses = () => {\r\n    // Calculate the amount each member owes\r\n    const totalExpense = expenses.reduce((sum, expense) => sum + expense.amount, 0);\r\n    const individualExpense = totalExpense / groupMembers.length;\r\n\r\n    // Update each member's balance\r\n    const updatedMembers = groupMembers.map(member => {\r\n      const expensesPaid = expenses.filter(expense => expense.paidBy === member.id);\r\n      const totalPaid = expensesPaid.reduce((sum, expense) => sum + expense.amount, 0);\r\n      const balance = totalPaid - individualExpense;\r\n\r\n      return {\r\n        ...member,\r\n        balance\r\n      };\r\n    });\r\n\r\n    setGroupMembers(updatedMembers);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Group Expense Tracker</h1>\r\n\r\n      <h2>Group Members</h2>\r\n      <ul>\r\n        {groupMembers.map(member => (\r\n          <li key={member.id}>\r\n            {member.name}\r\n            <button onClick={() => removeGroupMember(member.id)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={addGroupMember}>Add Member</button>\r\n\r\n      <h2>Expenses</h2>\r\n      <ul>\r\n        {expenses.map((expense, index) => (\r\n          <li key={index}>\r\n            Description: {expense.description}, Amount: {expense.amount}, Paid by: {expense.paidBy}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newExpenseDescription}\r\n          onChange={(e) => setNewExpenseDescription(e.target.value)}\r\n          placeholder=\"Expense Description\"\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          value={newExpenseAmount}\r\n          onChange={(e) => setNewExpenseAmount(Number(e.target.value))}\r\n          placeholder=\"Expense Amount\"\r\n        />\r\n        <select value={paidBy} onChange={(e) => setPaidBy(e.target.value)}>\r\n          <option value=\"\">Select Member</option>\r\n          {groupMembers.map(member => (\r\n            <option key={member.id} value={member.id}>{member.name}</option>\r\n          ))}\r\n        </select>\r\n        <button onClick={addExpense}>Add Expense</button>\r\n      </div>\r\n\r\n      <button onClick={splitExpenses}>Split Expenses</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupExpenseTracker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}