{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CREATIVE\\\\Desktop\\\\workspace\\\\splitwise\\\\src\\\\feature\\\\homepage\\\\components\\\\amount.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupExpenseTracker = () => {\n  _s();\n  const [groupMembers, setGroupMembers] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [newExpenseDescription, setNewExpenseDescription] = useState(\"\");\n  const [newExpenseAmount, setNewExpenseAmount] = useState(0);\n  const [paidBy, setPaidBy] = useState(\"\");\n\n  // Load group members and expenses from local storage on component mount\n  useEffect(() => {\n    const storedGroupMembers = localStorage.getItem(\"groupMembers\");\n    const storedExpenses = localStorage.getItem(\"expenses\");\n    if (storedGroupMembers) {\n      setGroupMembers(JSON.parse(storedGroupMembers));\n    }\n    if (storedExpenses) {\n      setExpenses(JSON.parse(storedExpenses));\n    }\n  }, []);\n\n  // Update local storage whenever group members or expenses change\n  useEffect(() => {\n    localStorage.setItem(\"groupMembers\", JSON.stringify(groupMembers));\n  }, [groupMembers]);\n  useEffect(() => {\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  }, [expenses]);\n\n  // Add a new group member\n  const addGroupMember = () => {\n    // Generate a unique ID for the member (using a simple timestamp in this example)\n    const memberId = new Date().getTime();\n    const newMember = {\n      id: memberId,\n      name: `Member ${memberId}`\n    };\n    setGroupMembers([...groupMembers, newMember]);\n  };\n\n  // Remove a group member\n  const removeGroupMember = memberId => {\n    const updatedMembers = groupMembers.filter(member => member.id !== memberId);\n    setGroupMembers(updatedMembers);\n  };\n\n  // Add a new expense\n  const addExpense = () => {\n    const newExpense = {\n      description: newExpenseDescription,\n      amount: newExpenseAmount,\n      paidBy\n    };\n    setExpenses([...expenses, newExpense]);\n\n    // Reset input fields\n    setNewExpenseDescription(\"\");\n    setNewExpenseAmount(0);\n    setPaidBy(\"\");\n  };\n\n  // Split the expenses among group members\n  const splitExpenses = () => {\n    // Calculate the amount each member owes\n    const totalExpense = expenses.reduce((sum, expense) => sum + expense.amount, 0);\n    const individualExpense = totalExpense / groupMembers.length;\n\n    // Update each member's balance\n    const updatedMembers = groupMembers.map(member => {\n      const expensesPaid = expenses.filter(expense => expense.paidBy === member.id);\n      const totalPaid = expensesPaid.reduce((sum, expense) => sum + expense.amount, 0);\n      const balance = totalPaid - individualExpense;\n      return {\n        ...member,\n        balance\n      };\n    });\n    setGroupMembers(updatedMembers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Group Expense Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Group Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: groupMembers.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [member.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeGroupMember(member.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, member.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addGroupMember,\n      children: \"Add Member\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: expenses.map((expense, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Description: \", expense.description, \", Amount:\", \" \", expense.amount, \", Paid by: \", expense.paidBy]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newExpenseDescription,\n        onChange: e => setNewExpenseDescription(e.target.value),\n        placeholder: \"Expense Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newExpenseAmount,\n        onChange: e => setNewExpenseAmount(Number(e.target.value)),\n        placeholder: \"Expense Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: paidBy,\n        onChange: e => setPaidBy(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), groupMembers.map(member => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: member.id,\n          children: member.name\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addExpense,\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: splitExpenses,\n      children: \"Split Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(GroupExpenseTracker, \"WjvImsfIHbacc7VGid3IZS43SCg=\");\n_c = GroupExpenseTracker;\nexport default GroupExpenseTracker;\nvar _c;\n$RefreshReg$(_c, \"GroupExpenseTracker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GroupExpenseTracker","_s","groupMembers","setGroupMembers","expenses","setExpenses","newExpenseDescription","setNewExpenseDescription","newExpenseAmount","setNewExpenseAmount","paidBy","setPaidBy","storedGroupMembers","localStorage","getItem","storedExpenses","JSON","parse","setItem","stringify","addGroupMember","memberId","Date","getTime","newMember","id","name","removeGroupMember","updatedMembers","filter","member","addExpense","newExpense","description","amount","splitExpenses","totalExpense","reduce","sum","expense","individualExpense","length","map","expensesPaid","totalPaid","balance","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","type","value","onChange","e","target","placeholder","Number","_c","$RefreshReg$"],"sources":["C:/Users/CREATIVE/Desktop/workspace/splitwise/src/feature/homepage/components/amount.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst GroupExpenseTracker = () => {\r\n    const [groupMembers, setGroupMembers] = useState([]);\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [newExpenseDescription, setNewExpenseDescription] = useState(\"\");\r\n    const [newExpenseAmount, setNewExpenseAmount] = useState(0);\r\n    const [paidBy, setPaidBy] = useState(\"\");\r\n\r\n    // Load group members and expenses from local storage on component mount\r\n    useEffect(() => {\r\n        const storedGroupMembers = localStorage.getItem(\"groupMembers\");\r\n        const storedExpenses = localStorage.getItem(\"expenses\");\r\n\r\n        if (storedGroupMembers) {\r\n            setGroupMembers(JSON.parse(storedGroupMembers));\r\n        }\r\n\r\n        if (storedExpenses) {\r\n            setExpenses(JSON.parse(storedExpenses));\r\n        }\r\n    }, []);\r\n\r\n    // Update local storage whenever group members or expenses change\r\n    useEffect(() => {\r\n        localStorage.setItem(\"groupMembers\", JSON.stringify(groupMembers));\r\n    }, [groupMembers]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"expenses\", JSON.stringify(expenses));\r\n    }, [expenses]);\r\n\r\n    // Add a new group member\r\n    const addGroupMember = () => {\r\n        // Generate a unique ID for the member (using a simple timestamp in this example)\r\n        const memberId = new Date().getTime();\r\n        const newMember = {\r\n            id: memberId,\r\n            name: `Member ${memberId}`,\r\n        };\r\n\r\n        setGroupMembers([...groupMembers, newMember]);\r\n    };\r\n\r\n    // Remove a group member\r\n    const removeGroupMember = (memberId) => {\r\n        const updatedMembers = groupMembers.filter(\r\n            (member) => member.id !== memberId\r\n        );\r\n        setGroupMembers(updatedMembers);\r\n    };\r\n\r\n    // Add a new expense\r\n    const addExpense = () => {\r\n        const newExpense = {\r\n            description: newExpenseDescription,\r\n            amount: newExpenseAmount,\r\n            paidBy,\r\n        };\r\n\r\n        setExpenses([...expenses, newExpense]);\r\n\r\n        // Reset input fields\r\n        setNewExpenseDescription(\"\");\r\n        setNewExpenseAmount(0);\r\n        setPaidBy(\"\");\r\n    };\r\n\r\n    // Split the expenses among group members\r\n    const splitExpenses = () => {\r\n        // Calculate the amount each member owes\r\n        const totalExpense = expenses.reduce(\r\n            (sum, expense) => sum + expense.amount,\r\n            0\r\n        );\r\n        const individualExpense = totalExpense / groupMembers.length;\r\n\r\n        // Update each member's balance\r\n        const updatedMembers = groupMembers.map((member) => {\r\n            const expensesPaid = expenses.filter(\r\n                (expense) => expense.paidBy === member.id\r\n            );\r\n            const totalPaid = expensesPaid.reduce(\r\n                (sum, expense) => sum + expense.amount,\r\n                0\r\n            );\r\n            const balance = totalPaid - individualExpense;\r\n\r\n            return {\r\n                ...member,\r\n                balance,\r\n            };\r\n        });\r\n\r\n        setGroupMembers(updatedMembers);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Group Expense Tracker</h1>\r\n\r\n            <h2>Group Members</h2>\r\n            <ul>\r\n                {groupMembers.map((member) => (\r\n                    <li key={member.id}>\r\n                        {member.name}\r\n                        <button onClick={() => removeGroupMember(member.id)}>\r\n                            Remove\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <button onClick={addGroupMember}>Add Member</button>\r\n\r\n            <h2>Expenses</h2>\r\n            <ul>\r\n                {expenses.map((expense, index) => (\r\n                    <li key={index}>\r\n                        Description: {expense.description}, Amount:{\" \"}\r\n                        {expense.amount}, Paid by: {expense.paidBy}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={newExpenseDescription}\r\n                    onChange={(e) => setNewExpenseDescription(e.target.value)}\r\n                    placeholder=\"Expense Description\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={newExpenseAmount}\r\n                    onChange={(e) =>\r\n                        setNewExpenseAmount(Number(e.target.value))\r\n                    }\r\n                    placeholder=\"Expense Amount\"\r\n                />\r\n                <select\r\n                    value={paidBy}\r\n                    onChange={(e) => setPaidBy(e.target.value)}\r\n                >\r\n                    <option value=\"\">Select Member</option>\r\n                    {groupMembers.map((member) => (\r\n                        <option\r\n                            key={member.id}\r\n                            value={member.id}\r\n                        >\r\n                            {member.name}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n                <button onClick={addExpense}>Add Expense</button>\r\n            </div>\r\n\r\n            <button onClick={splitExpenses}>Split Expenses</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GroupExpenseTracker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}